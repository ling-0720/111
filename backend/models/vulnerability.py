from datetime import datetime
from typing import Dict, Optional
from dataclasses import dataclass
from enum import Enum

class Severity(Enum):
    CRITICAL = "严重"
    HIGH = "高危"
    MEDIUM = "中危"
    LOW = "低危"
    INFO = "信息"

class VulnerabilityStatus(Enum):
    UNCONFIRMED = "未确认"
    CONFIRMED = "已确认"
    FALSE_POSITIVE = "误报"
    FIXED = "已修复"
    IN_PROGRESS = "修复中"

@dataclass
class Vulnerability:
    """漏洞信息类"""
    vuln_id: str
    name: str
    description: str
    severity: str
    status: str
    affected_device: str
    discovery_date: str
    cve_id: Optional[str] = None
    cvss_score: Optional[float] = None
    affected_component: Optional[str] = None
    affected_version: Optional[str] = None
    last_update: datetime = datetime.now()
    fix_suggestion: Optional[str] = None
    technical_details: Optional[Dict] = None
    references: Optional[Dict] = None
    
    def to_dict(self) -> Dict:
        """转换为字典格式"""
        return {
            "vuln_id": self.vuln_id,
            "name": self.name,
            "description": self.description,
            "severity": self.severity,
            "status": self.status,
            "affected_device": self.affected_device,
            "discovery_date": self.discovery_date,
            "cve_id": self.cve_id,
            "cvss_score": self.cvss_score,
            "affected_component": self.affected_component,
            "affected_version": self.affected_version,
            "last_update": self.last_update.isoformat(),
            "fix_suggestion": self.fix_suggestion,
            "technical_details": self.technical_details,
            "references": self.references
        }
    
    @classmethod
    def from_dict(cls, data: Dict) -> 'Vulnerability':
        """从字典创建实例"""
        return cls(
            vuln_id=data["vuln_id"],
            name=data["name"],
            description=data["description"],
            severity=data["severity"],
            status=data["status"],
            affected_device=data["affected_device"],
            discovery_date=data["discovery_date"],
            cve_id=data.get("cve_id"),
            cvss_score=data.get("cvss_score"),
            affected_component=data.get("affected_component"),
            affected_version=data.get("affected_version"),
            last_update=datetime.fromisoformat(data["last_update"]),
            fix_suggestion=data.get("fix_suggestion"),
            technical_details=data.get("technical_details"),
            references=data.get("references")
        ) 